#ifndef ERRORLISTDOCKWIDGET_H
#define ERRORLISTDOCKWIDGET_H

#include <QDockWidget>
#include <QHBoxLayout>
#include <QTableWidget>
#include <QToolButton>
#include <QVBoxLayout>

#include "../Model/messagelist.h"

namespace Tome
{
    /**
     * @brief Shows messages, warnings and errors generated by automated tasks.
     */
    class ErrorListDockWidget : public QDockWidget
    {
        Q_OBJECT

        public:
            /**
             * @brief Constructs a new widget for showing messages, warnings and errors generated by automated tasks.
             * @param parent Optional owner widget.
             */
            ErrorListDockWidget(QWidget* parent);
            ~ErrorListDockWidget();

            /**
             * @brief Shows the passed messages, warnings and errors.
             * @param messages Messages to show.
             */
            void showMessages(const MessageList& messages);

        signals:
            /**
             * @brief Progress of the refreshing the message list has changed.
             * @param title Title of the current refresh operation.
             * @param text Details of the current refresh operation.
             * @param currentValue Current progress value of the current refresh operation.
             * @param maximumValue Maximum progress value of the current refresh operation.
             */
            void progressChanged(const QString title, const QString text, const int currentValue, const int maximumValue) const;

            /**
             * @brief A link to another Tome record has been activated.
             * @param recordId Id of the selected record.
             */
            void recordLinkActivated(const QString& recordId);

        private:
            QWidget* widget;

            QVBoxLayout* verticalLayout;

            QTableWidget* tableWidgetErrorList;

            QHBoxLayout* toolButtonsLayout;

            QToolButton* toolButtonErrors;
            QToolButton* toolButtonMessages;
            QToolButton* toolButtonWarnings;

            MessageList messages;

            void refreshMessages();

        private slots:
            void onRecordLinkActivated(const QString& recordId);
            void onToolButtonErrorsToggled(bool checked);
            void onToolButtonWarningsToggled(bool checked);
            void onToolButtonMessagesToggled(bool checked);
    };
}


#endif // ERRORLISTDOCKWIDGET_H
